<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error0000" xml:space="preserve">
    <value>提交成功</value>
  </data>
  <data name="Error10000" xml:space="preserve">
    <value>请求超过次数</value>
  </data>
  <data name="Error1001" xml:space="preserve">
    <value>提交失败</value>
  </data>
  <data name="Error1002" xml:space="preserve">
    <value>接口UserID或ApiKey错误</value>
  </data>
  <data name="Error1003" xml:space="preserve">
    <value>签名错误</value>
  </data>
  <data name="Error1004" xml:space="preserve">
    <value>参数错误</value>
  </data>
  <data name="Error1005" xml:space="preserve">
    <value>手机号码错误</value>
  </data>
  <data name="Error1006" xml:space="preserve">
    <value>未找到数据</value>
  </data>
  <data name="Error1011" xml:space="preserve">
    <value>部分成功</value>
  </data>
  <data name="Error2001" xml:space="preserve">
    <value>日期格式错误</value>
  </data>
  <data name="Error2002" xml:space="preserve">
    <value>长度超过限制</value>
  </data>
  <data name="Error2003" xml:space="preserve">
    <value>客户编号不存在</value>
  </data>
  <data name="Error2004" xml:space="preserve">
    <value>订单号存在重复</value>
  </data>
  <data name="Error2005" xml:space="preserve">
    <value>订单号已存在</value>
  </data>
  <data name="Error2006" xml:space="preserve">
    <value>该运输方式没可用跟踪号</value>
  </data>
  <data name="Error2007" xml:space="preserve">
    <value>跟踪号已存在</value>
  </data>
  <data name="Error2008" xml:space="preserve">
    <value>未开通关税预付权限，请联系业务</value>
  </data>
  <data name="Error2009" xml:space="preserve">
    <value>重量必须大于零</value>
  </data>
  <data name="Error2011" xml:space="preserve">
    <value>申报信息备注格式不正确</value>
  </data>
  <data name="Error2012" xml:space="preserve">
    <value>收件人电话格式不正确</value>
  </data>
  <data name="Error2013" xml:space="preserve">
    <value>订单号不能超过25个字符</value>
  </data>
  <data name="Error2010" xml:space="preserve">
    <value>该运输方式不发送到此国家</value>
  </data>
  <data name="Error9999" xml:space="preserve">
    <value>平台异常</value>
  </data>
  <data name="Error2017" xml:space="preserve">
    <value>件数不能为0</value>
  </data>
  <data name="Error2014" xml:space="preserve">
    <value>邮编不能为空</value>
  </data>
  <data name="Error2015" xml:space="preserve">
    <value>州/省不能为空</value>
  </data>
  <data name="Error2016" xml:space="preserve">
    <value>城市不能为空</value>
  </data>
  <data name="Error2018" xml:space="preserve">
    <value>运输方式不存在或未启用</value>
  </data>
  <data name="Error2019" xml:space="preserve">
    <value>注册失败</value>
  </data>
  <data name="Error2020" xml:space="preserve">
    <value>用户名不能为空,只能为数字和字母,排除特殊字符如 ! # %</value>
  </data>
  <data name="Error2021" xml:space="preserve">
    <value>用户密码输入不能为空</value>
  </data>
  <data name="Error2022" xml:space="preserve">
    <value>用户确认密码输入不一致</value>
  </data>
  <data name="Error2023" xml:space="preserve">
    <value>联系人不能为空</value>
  </data>
  <data name="Error2024" xml:space="preserve">
    <value>联系人手机不能为空</value>
  </data>
  <data name="Error2025" xml:space="preserve">
    <value>客户名称不能为空</value>
  </data>
  <data name="Error2026" xml:space="preserve">
    <value>Email不能为空</value>
  </data>
  <data name="Error2027" xml:space="preserve">
    <value>地址不能为空</value>
  </data>
  <data name="Error2028" xml:space="preserve">
    <value>平台来源不能为空</value>
  </data>
  <data name="Error2029" xml:space="preserve">
    <value>用户名已存在</value>
  </data>
</root>