@{
    ViewBag.Title = "InStorageWeightAbnormal";
    Html.AddScriptParts("/Scripts/My97DatePicker/WdatePicker.js");
}

@model LMS.Controllers.WayBillController.InStorageWeightAbnormalViewModel

<div id="showCustomerList" tabindex="200" style="overflow: scroll; display: none; position: relative">
</div>
<div id="showShippingMethodList" style="overflow: scroll; display: none; position: relative">
</div>


<div class="domebg" id="right_con">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(a=>a.FilterModel.IsFirstIn)
        
        var url = Html.GetUrl("InStorageWeightAbnormal", "WayBill", Model.FilterModel);
        
         <input type="hidden" id="ReturnUrl" name="ReturnUrl" value="@url" />
        
        <table class="data_table" width="100%" border="1" cellpadding="0" cellspacing="0">
            <tr class="date_row_select">
                <td width="20%">
                    <span class="info_box info_select">客户编码:</span>
                    <input type="text" id="CustomerCode" value="@Model.FilterModel.CustomerCode" name="FilterModel.CustomerCode" readonly="readonly" class="txt txt_short" />
                    <a href="javascript:void(0)" id="selectCustomer" class="btn_href">选择</a>
                    <input type="hidden" id="CustomerID"/>
                    <input type="hidden" id="CustomerType"/>
                </td>

                <td width="20%">
                    <span class="info_box info_select">运输方式:</span>
                    <input type="text" id="ShippingName" value="@Model.FilterModel.ShippingName" name="FilterModel.ShippingName" readonly="readonly" class="txt txt_short"/>
                    <input type="hidden" id="ShippingMethodId" name="FilterModel.ShippingMethodId" value="@Model.FilterModel.ShippingMethodId" />
                    <input type="button" id="selectShippingMethod" class="btn" value="选择" />
                </td>

                <td width="10%">
                    <span class="info_box info_select">查询条件:</span>
                    @Html.DropDownListFor(o => o.FilterModel.SearchWhere, Model.SearchWheres, new { @style = "width:100px;" })
             
                </td>
                
                <td width="20%">
                    @Html.TextAreaFor(p => p.FilterModel.SearchContext, new { @style = "height:80px; width:200px;" })
                </td>
           
            </tr>
        


            <tr class="date_row_select">
            
                <td>
                    
                    <span class="info_box info_select">创建时间 :</span>
                    @Html.TextBoxFor(p => p.FilterModel.StartTime, new { @onclick = "WdatePicker({name:'simple', charset:'gb2312',dateFmt:'yyyy-MM-dd HH:mm'})", @Value = String.Format("{0:yyyy-MM-dd HH:mm}", Model.FilterModel.StartTime), @class = "txt wdate", @style = "width:130px;" })
                    <span>至:</span>
                    @Html.TextBoxFor(p => p.FilterModel.EndTime, new { @onclick = "WdatePicker({name:'simple', charset:'gb2312',dateFmt:'yyyy-MM-dd HH:mm'})", @Value = String.Format("{0:yyyy-MM-dd HH:mm}", Model.FilterModel.EndTime), @class = "txt wdate", @style = "width:130px;" })
                </td>
                
                
                 <td>
                    <span class="info_box info_select" style="width:125px">是否大于实际重量 :</span>
                     @Html.DropDownListFor(p=>p.FilterModel.IsWeightGtWeight,Model.WeightListItem)
                </td>


                <td colspan="2">
                    <div class="tl">
                        <input type="submit" class="btn" value="查询" id="btnSearch" name="btnSearch" />
                 
                       @if (Model.IsFastInStorageBut)
                        {
                            <input type="hidden" id="shippingId" name="shippingId" />
                            <input type="hidden" id="customerCode" name="customerCode" />
                            <input type="hidden" id="OrderNumber" name="OrderNumber" />
                            <input type="hidden" id="Opereate" name="Opereate" value="InStorageWeightAbnormal"/>
                            <input type="button"   class="btn" value="直接入仓" id="btnInStorage" name="btnInStorage" />
                        }
                              
                        @if (Model.DisplayBatchDelete)
                        {
                            <input type="button" class="btn" value="批量删除" onclick=" return BatchDelete(); " />
                        }

                        @if (Model.DisplayCancelHold)
                        {
                            <input type="button" class="btn" value="批量取消拦截" onclick=" return BatchCancelHoldOn(); " />
                        }
                 
                        <input type="submit" class="btn" value="导 出" id="btnExport" name="btnExport"/>


                    </div>
                </td>
                
            </tr>
        </table>
        
        
        
        
        
        <div id="pm_dis_div">
            <table class="data_table mt20" width="100%" border="1" cellpadding="0" cellspacing="0">
                <thead>
                    <tr class="data_row_two">

                        <th>
                            <input type="checkbox" class="checkbox" id="SelectAll" name="SelectAll" /><label for="SelectAll">全选</label>
                        </th>
                        <th>运单号
                        </th>
                        <th>客户订单号
                        </th>
               
                        <th>客户名称
                        </th>
                          <th>跟踪号
                        </th>
                        <th>运输方式
                        </th>
                        <th>发货国家
                        </th>
                         <th>预报重量(kg)
                        </th>
                        <th>称重重量(kg)
                        </th>
                        <th>异常类别
                        </th>
                        <th>异常说明
                        </th>
                        <th>是否拦截</th>
                        <th>创建时间
                        </th>
                
                    </tr>
                </thead>
                <tbody>
                    @{
                    
                        foreach (var row in Model.PagedList.InnerList)
                        {    
                            <tr class="data_row_dan" id="tr_@(row.WayBillNumber)">
                                <td>
                                    <input type="checkbox" class="checkbox" name="WayBillNumbers" value="@row.WayBillNumber" />     
                                </td>
                                  
                                <td name="WayBillNumber">
                                    @row.WayBillNumber
                                </td>
                                <td name="RawWayBillNumber">
                                    @row.CustomerOrderNumber
                                </td>
                                <td customerCode="@row.CustomerCode" name="CustomerCode"  >
                                    @row.CustomerName
                                </td>
                               
                                 <td>
                                    @row.TrackingNumber
                                 </td>
  
                                <td inshippingid="@row.InShippingMethodId" name="InShippingMethodID">
                                    @row.InShippingMethodName
                                </td>
                                
                                <td>
                                    @row.CountryCode
                                </td>

                     
                                <td>
                                    @row.ForecastWeight
                                </td>
                                
                                <td>
                                    @row.Weight
                                </td>
                                
                                  <td>
                                    @row.AbnormalTypeName
                                </td>

                                 <td>
                                    @row.AbnormalDescription
                                </td>
                                

                                <td id="@(row.WayBillNumber)_isHold"  name="IsHold">
                                    @if (row.IsHold)
                                    {
                                        <text>是</text>
                                    }
                                    else
                                    {
                                        <text>否</text>
                                    }
                                </td>
                                

                                <td>
                                    @row.CreatedOn
                                </td>
                            </tr>
                             
                        }
                    }
                    <tr class="data_row_none">
                        <td colspan="20">
                            @{
                                List<string> getRowCount = new List<string>();
                                if (!string.IsNullOrWhiteSpace(Model.FilterModel.SearchContext))
                                {
                                    getRowCount = Model.FilterModel.SearchContext.Split(Environment.NewLine.ToCharArray(), StringSplitOptions.RemoveEmptyEntries).ToList();
                                }

                                if (string.IsNullOrWhiteSpace(Model.FilterModel.SearchContext) || getRowCount.Count < 1000)
                                {
                                             @Html.Pager(Model.PagedList, Model.FilterModel)
                                }
                            }
                            
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

    }


</div>



<script type="text/javascript">

    $(function() {

        //选择运输方式
        $("#selectShippingMethod").bind("click", function () {
            debugger;
            $("#showShippingMethodList").showWindow("@Url.Action("FilterShippingMethod", "WayBill")?customerId=" + $("#CustomerID").val() + "&customerTypeId=" + $("#CustomerType").val() + "&type=1", "选择运输方式");
            var parentWindow = $("#showShippingMethodList").parent("div");
            $(parentWindow).css("top", "0");
            $(parentWindow).animate({
                top: 120
            }, {
                duration: 1000,
                step: function (now, fx) {
                    $(".window").css("top", now);
                }
            });
            $("#showShippingMethodList").show();
        });


        //全选
        $("#SelectAll").click(function () {
            if ($(this).attr("checked")) {
                $(":checkbox[name='WayBillNumbers']").attr("checked", true);
            } else {
                $(":checkbox[name='WayBillNumbers']").attr("checked", false);
            }
        });
        



        //点击直接入仓按钮
        $("#btnInStorage").click(function () {
            var selectwayBillNumber = [];
            var shippingMethod = [];
            var customerCode = [];

            $("input[name='WayBillNumbers']:checked").each(function () {

                var shipping = $.trim($(this).parents("tr").children("[name='InShippingMethodID']").attr("inshippingid"));
                var customer = $.trim($(this).parents("tr").children("[name='CustomerCode']").attr("customerCode"));

                selectwayBillNumber.push($(this).val());
                shippingMethod.push(shipping);
                customerCode.push(customer);
              
            });


            if (selectwayBillNumber.length == 0) {
                alert("请选择已提交状态的运单！");
                return false;
            }
            else {
                $("#OrderNumber").val(selectwayBillNumber.join(','));
            }

            $.unique(shippingMethod);   //过滤重复的运输方式
            $.unique(customerCode);   //过滤重复的客户代码

            if (shippingMethod.length > 1 || customerCode.length > 1) {
                alert("一次只能入仓同一个客户下同一个渠道的运输方式，请重新筛选运单！");
                return false;
            }
            else if (shippingMethod[0] == "") {
                alert("存在运输方式为空的运单，请重新筛选运单！");
                return false;
            } 
            //else {
            //    $("#shippingId").val(shippingMethod[0]);
            //    $("#customerCode").val(customerCode[0]);
            //}

            $.ajax({
                type: "POST",
                url: "@Url.Action("WeightAbnormalFirstInStorageTemp")",
                dataType: "json",
                async: false,
                data: { ReturnUrl: $("#ReturnUrl").val(), WayBillNumbers: $("#OrderNumber").val(), GetOpereate: "InStorageWeightAbnormal", ShippingId: shippingMethod[0], CustomerCode: customerCode[0] },
                success: function(data) {
                    if (data.Result) {
                        openIFrame('直接入仓', 'WayBill/WeightAbnormalFastInStorage', '{flag:add}');
                      // location.href = "@Url.Action("WeightAbnormalFastInStorage","WayBill")";
                    } else {
                        alert("出现异常！");
                    }
                }
            });

        });

    });



    //批量取消拦截
    function BatchCancelHoldOn() {
        var wayBillNumbers = [];
        $("input[name='WayBillNumbers']").each(function () {
            if ($(this).attr("checked")) {
                wayBillNumbers.push($(this).val());
            }
        });

        if (wayBillNumbers.length == 0) {
            alert("请选择要取消拦截的订单");
            return false;
        }

        $.ajax({
            type: "GET",
            url: "@Url.Action("BatchCancelHoldWayBill")",
            dataType: "json",
            data: { wayBillNumbers: wayBillNumbers.join(',') },
            success: function (data) {
                if (data.Result) {
                    //for (var i = 0; i < wayBillNumbers.length; i++) {
                    //    $("input[type='button'][name='" + wayBillNumbers[i] + "']").hide();
                    //    $("#" + wayBillNumbers[i] + "_isHold").html("否");
                    //}
                    //alert("操作成功！");
                    location.href = $("#ReturnUrl").val();
                    return true;
                } else {
                    alert(data.Message);
                    return false;
                }
            }
        });
    }

 






    //批量删除
    function BatchDelete() {

        var wayBillNumbers = [];
        var errorWayBillNumbers = [];
        $("input[name='WayBillNumbers']").each(function () {
            if ($(this).attr("checked")) {

                var wayBillStatus = $(this).parents("tr").children("[name='waybillStatus']").text().trim();
                var abnormalStatus = $(this).parents("tr").children("[name='AbnormalStatus']").text().trim();

                if (wayBillStatus == "已收货" && abnormalStatus == "拦截") {
                    errorWayBillNumbers.push($(this).val());

                } else {//正确数据
                    wayBillNumbers.push($(this).val());
                }


            }
        });

        if (errorWayBillNumbers.length > 0) {
            alert(errorWayBillNumbers.join(",") + " " + "已收货且拦截的订单不能删除！");
            return false;
        }

        if (wayBillNumbers.length == 0) {
            alert("请选择要删除的订单");
            return false;
        }


        $.ajax({
            type: "GET",
            url: "@Url.Action("BatchDeleteAbnormalWayBillInfo")",
            dataType: "json",
            data: { wayBillNumbers: wayBillNumbers.join(',') },
            success: function (data) {
                if (data.Result) {
                    
                    location.href = $("#ReturnUrl").val();
                    return true;
                } else {
                    alert(data.Message);
                    return false;
                }
            }
        });
        return false;
    }


</script>
