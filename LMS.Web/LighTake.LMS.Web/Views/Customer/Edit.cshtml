@model LMS.Controllers.CustomerController.CustomerEditViewModel
@{
    Layout = null;

}


<form id="editfrom">

    <input type="hidden" id="returnUrl" value="@Model.ReturnUrl"/>

    <div  id="right_con" >
        <ul>
            <li class="mt20"><span class="info_box info_middle">客户代码 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.CustomerCode, new { @class = "txt txt_middle", maxlength = "20", @readonly = "readonly" })
                <input type="hidden" name="CustomerModel.CustomerID" value="@Model.CustomerModel.CustomerID"/>
            </li>
            <li class="mt20"><span class="info_box info_middle">登录帐号 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.AccountID, new { @class = "txt txt_middle", @maxlength = "50" })
            </li>
            <li class="mt20"><span class="info_box info_middle">登录密码 : </span>
                @Html.PasswordFor(p => p.CustomerModel.AccountPassWord, new { @class = "txt txt_middle", @maxlength = "50" })
            </li>
            <li class="mt20"><span class="info_box info_middle">ApiSecret : </span>
                @Html.HiddenFor(p => p.CustomerModel.ApiKey)
                @Html.TextBoxFor(p => p.CustomerModel.ApiSecret, new { @class = "txt txt_middle", @maxlength = "50", @minlength = "8", @readonly = "readonly" })   <input id="BuildSecret" type="button" value="重新生成"/>
            </li>
            @* <li class="mt20"><span class="info_box info_middle">客户类型 : </span>
                @Html.DropDownListFor(p=>p.CustomerModel.CustomerTypeID,Model.CustomerTypeList,new { @style = "width:100px;" })
            </li>*@
         
            <li class="mt20"><span class="info_box info_middle">结算类型 : </span>
                @Html.DropDownListFor(p => p.CustomerModel.PaymentTypeID, Model.PaymentTypeList, new { @style = "width:100px;" })
            </li>
            <li class="mt20"><span class="info_box info_middle" >是否启用信用度管控 :  </span>
                @Html.CheckBoxFor(p => p.CustomerModel.EnableCredit, new { id = "EnableCredit" })
            </li>
            <li class="mt20" id="MaxDel"><span class="info_box info_middle">信用度 :  </span>
                @Html.TextBoxFor(p => p.CustomerModel.MaxDelinquentAmounts, new { id = "MaxDelvla" })
            </li>
            <li class="mt20"><span class="info_box info_middle">客户名称 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.Name, new { @class = "txt txt_middle", @maxlength = "50" })
            </li>
            <li class="mt20"><span class="info_box info_middle">联系人 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.LinkMan, new { @class = "txt txt_middle", @maxlength = "50" })
            </li>
            <li class="mt20"><span class="info_box info_middle">电话 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.Tele, new { @class = "txt txt_middle", @maxlength = "50" })
            </li>
            <li class="mt20"><span class="info_box info_middle">网址 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.WebSite, new { @class = "txt txt_long", @maxlength = "200" })
            </li>
            <li class="mt20"><span class="info_box info_middle">地址 : </span>
                @Html.TextBoxFor(p => p.CustomerModel.Address, new { @class = "txt txt_long", @maxlength = "128" })
            </li>
            <li class="mt20"><span class="info_box info_middle">业务经理 : </span>
             @Html.DropDownListFor(p => p.CustomerModel.CustomerManager, Model.CustomerManagerList, new Dictionary<string, object> { { "class", "chzn-select-deselect select_middle" }, { "data-placeholder", "全部" } })
                
             <li class="mt20"><span class="info_box info_middle">客户平台来源 : </span>
             @Html.Label(Model.SourcePlatform) 

                @*   @Html.TextBoxFor(p=>p.CustomerModel.CustomerManager,new { @class = "txt txt_long",@maxlength="50" })
                <input type="button" value="选 择" class="btn"  id="selectCustomerManager" onclick="SelectCustomerManager()"/>*@
            </li>

            <li class="mt20"><span class="info_box info_middle">状态 : </span>
                @* @if (Model.CustomerModel.Status == 1)
                {
                    <input type="checkbox"  name="CustomerModel.Status" value="1" checked="checked" />
                }
                else
                {
                    <input type="checkbox" name="CustomerModel.Status" value="1" />
                }启用*@
                @Html.DropDownListFor(m => m.CustomerModel.Status, Model.CustomerStatus)
            </li>
            <li class="mt20"><span class="info_box info_middle">备注 : </span>
                @Html.TextAreaFor(p => p.CustomerModel.Remark, new { @class = "area vt", @cols = "45", @rows = "6" })
            </li>
            <li class="mt20"><span class="info_box info_middle"></span>
                
            <input type="hidden" name="CustomerModel.CustomerTypeID" value="@Model.CustomerModel.CustomerTypeID"/>

            <input type="button" class="btn" value="保存" id="Savebnt" onclick="Save();" />
        </ul>
    </div>
</form>




<script type="text/javascript">

    var config = {
        '.chzn-select': {},
        '.chzn-select-deselect': { allow_single_deselect: true },
        '.chzn-select-no-single': { disable_search_threshold: 10 },
        '.chzn-select-no-results': { no_results_text: 'Oops, nothing found!' },
        '.chzn-select-width': { width: "95%" }
    };
    for (var selector in config) {
        $(selector).chosen(config[selector]);
    }


    function Save() {
        if ($.trim($("#editfrom #CustomerModel_AccountID").val()) == "") {
            alert("登录帐号不能为空！");
            return false;
        }
        //if ($.trim($("#editfrom #CustomerModel_CustomerCode").val()) == "") {
        //    alert("客户编号不能为空！");
        //    return false;
        //} else {
        //    var re = /^[A-Za-z0-9]*$/;
        //    if (re.test($.trim($("#editfrom #CustomerModel_CustomerCode").val())) == false) {
        //        alert("客户编号只能输入字母和数字！");
        //        return false;
        //    }
        //}
        if ($.trim($("#editfrom #CustomerModel_ApiKey").val()) != "" && $.trim($("#editfrom #CustomerModel_ApiKey").val()).length < 8) {
            alert("ApiKey不能小于8个字符！");
            return false;
        }
        if ($.trim($("#editfrom #CustomerModel_Remark").val()).length > 500) {
            alert("备注不能超过500个字符！");
            return false;
        }
        if ($("#MaxDelvla").val() < 0) {
            alert("信用额度不能小于0！");
            return false;
        }
        $("#editfrom #Savebnt").attr('disabled', true);
        $.ajax({
            type: "GET",
            url: "EditCustomer",
            dataType: "json",
            data: $("#editfrom").serialize(),
            success: function(data) {
                if (data.Result)
                {
                    alert("保存成功！");
                    location.href = $("#returnUrl").val();
        
                }else {
                    alert(data.Message);
                }
            },
            complete: function (data) {
                $("#editfrom #Savebnt").attr('disabled', false);
            }
        });
        return true;
    }
    
    $(function () {

        if (!$("#EnableCredit").get(0).checked) {
            $("#MaxDel").addClass("dn");
        } else {
            $("#MaxDel").removeClass("dn");
        }
        $("#EnableCredit").change(function () {
            //alert($("#EnableCredit").get(0).checked);
            if (!$("#EnableCredit").get(0).checked) {
                $("#MaxDel").addClass("dn");
            } else {
                $("#MaxDel").removeClass("dn");
            }
        });
        $("#BuildSecret").bind("click", function() {
            $.ajax({
                type: "GET",
                url: "GetSecret",
                dataType: "json",
                data: { code: $('#CustomerModel_CustomerCode').val() },
                success: function(data) {
                    $('#CustomerModel_ApiKey').val(data.ApiKey);
                    $('#CustomerModel_ApiSecret').val(data.ApiSecret);
                },
                complete: function (data) {
                    ;
                }
            });
        });
        

    });
</script>
